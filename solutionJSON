import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.rallydev.rest.RallyRestApi;
import com.rallydev.rest.request.CreateRequest;
import com.rallydev.rest.response.CreateResponse;

import java.io.FileReader;
import java.net.URI;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import java.io.FileWriter;
import java.io.IOException;

public class ratc {

    public static void main(String[] args) throws IOException {
        String testCaseId = "CC2-T56142";
        RestAssured.baseURI = "https://jira.healthcareit.net/";

        // Send the GET request to JIRA
        Response response = RestAssured.given().log().all()
                .header("Authorization", "Bearer " + "NjYwNzM3MzEyMzczOqpitrVg77VQlPFPBwSZ+cMq37S5")
                .header("Accept", "application/json")
                .when()
                .get("/rest/atm/1.0/testcase/" + testCaseId)
                .then()
                .assertThat()
                .statusCode(200)
                .extract()
                .response();

        System.out.println("Pretty Response: " + response.prettyPrint());

        // Parse the JIRA response
        JsonObject jiraJson = JsonParser.parseString(response.getBody().asString()).getAsJsonObject();

        // Create the Rally JSON object
        JsonObject rallyJson = new JsonObject();
        rallyJson.addProperty("projectRef", "17893258189911");

        JsonObject testCase = new JsonObject();
        testCase.addProperty("Name", jiraJson.get("name").getAsString());
        testCase.addProperty("Method", "Manual"); // Assuming a default value
       // testCase.addProperty("Priority", "Useful"); // Assuming a default value
        
        
        String priority= jiraJson.get("priority").getAsString();
        
        if (priority.equalsIgnoreCase ("Normal" )) {
        	testCase.addProperty ("Priority", "Useful");
        	} else {
        	testCase.addProperty("Priority", priority);
        	}
        
        
        
       // testCase.addProperty("Objective", jiraJson.get("Objective").getAsString());
        testCase.addProperty("Owner", "/user/775698509283"); // Assuming a default value
        testCase.addProperty("Ready", jiraJson.get("status").getAsString().equals("Ready"));

        // Add Tags
        JsonArray tagsArray = new JsonArray();
        JsonObject tagObject = new JsonObject();
        tagObject.addProperty("_ref", "/tag/56011614555");
        tagObject.addProperty("Name", "Billing and Eligibility");
        tagsArray.add(tagObject);
        testCase.add("Tags", tagsArray);

        // Add TestFolder
        JsonObject testFolder = new JsonObject();
        testFolder.addProperty("_ref", "/testfolder/790320784037");
        rallyJson.add("TestFolder", testFolder);

        // Add the testCase object to the rallyJson
        rallyJson.add("testCase", testCase);

        // Save the transformed JSON to a file
        try (FileWriter file = new FileWriter("rallyTestCase.json")) {
            Gson gson = new GsonBuilder().setPrettyPrinting().create();
            gson.toJson(rallyJson, file);
        }

        System.out.println("Transformed JSON saved to rallyTestCase.json");
    }
}


i dont want to use restassured here instead i wanna use httpclient and jira instead of saving the JSON to file on local i wanna save it on json variable object to use it in a different class



